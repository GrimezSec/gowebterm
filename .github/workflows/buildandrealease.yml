name: Build and Release

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17'

      - name: Build the application
        run: |
          go mod download
          go build -o gowebterm main.go

      - name: Archive built binary
        uses: actions/upload-artifact@v2
        with:
          name: gowebterm
          path: gowebterm

  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release'

    steps:
      - name: Download built binary
        uses: actions/download-artifact@v2
        with:
          name: gowebterm

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.release.tag_name }}
          release_name: ${{ github.event.release.tag_name }}
          body: |
            Release of version ${{ github.event.release.tag_name }}
          draft: false
          prerelease: false

      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./gowebterm
          asset_name: gowebterm
          asset_content_type: application/octet-stream
